model: {
  second: {
    network_class_name: "VoxelNet"
    voxel_generator {
      point_cloud_range : [-100, -100, -5, 100, 100, 3]
      voxel_size : [0.25, 0.25, 8]
      max_number_of_points_per_voxel : 60
    }
    voxel_feature_extractor: {
      module_class_name: "PillarFeatureNet"
      num_filters: [64]
      with_distance: false
      num_input_features: 4
    }
    middle_feature_extractor: {
      module_class_name: "PointPillarsScatter"
      downsample_factor: 1
      num_input_features: 64
    }
    rpn: {
      module_class_name: "RPNV2"
      layer_nums: [3, 5, 5]
      layer_strides: [2, 2, 2]
      num_filters: [64, 128, 256]
      upsample_strides: [0.25, 0.5, 1]
      num_upsample_filters: [128, 128, 128]
      use_groupnorm: false
      num_groups: 32
      num_input_features: 64
    }
    loss: {
      classification_loss: {
        weighted_sigmoid_focal: {
          alpha: 0.25
          gamma: 2.0
          anchorwise_output: true
        }
      }
      localization_loss: {
        weighted_smooth_l1: {
          sigma: 3.0
          code_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        }
      }
      classification_weight: 1.0
      localization_weight: 2.0
    }
    num_point_features: 4 # model's num point feature should be independent of dataset
    # Outputs
    use_sigmoid_score: true
    encode_background_as_zeros: true
    encode_rad_error_by_sin: true
    sin_error_factor: 1.0

    use_direction_classifier: true
    direction_loss_weight: 0.2
    num_direction_bins: 2
    direction_limit_offset: 0
    direction_offset: 0.78

    # Loss
    pos_class_weight: 1.0
    neg_class_weight: 1.0

    loss_norm_type: NormByNumPositives
    # Postprocess
    post_center_limit_range: [-120, -120, -10, 120, 120, 10]
    nms_class_agnostic: false # only valid in multi-class nms
    box_coder: {
      ground_box3d_coder: {
        linear_dim: false
        encode_angle_vector: false
      }
    }
    target_assigner: {
      class_settings: {
        class_name: "car"
        anchor_generator_range: {
          sizes: [1.93, 4.76, 1.72] # wlh
          anchor_ranges: [-100, -100, 1.0, 100, 100, 1.0]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.4
        unmatched_threshold : 0.3
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.02
        nms_iou_threshold: 0.3
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "bicycle"
        anchor_generator_range: {
          sizes: [0.63, 1.76, 1.44] # wlh
          anchor_ranges: [-100, -100, 1.0, 100, 100, 1.0]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.2
        unmatched_threshold : 0.15
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.02
        nms_iou_threshold: 0.3
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "animal"
        anchor_generator_range: {
          sizes: [0.36, 0.73, 0.51] # wlh
          anchor_ranges: [-100, -100, 1.0, 100, 100, 1.0]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.2
        unmatched_threshold : 0.15
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.02
        nms_iou_threshold: 0.3
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "bus"
        anchor_generator_range: {
          sizes: [2.96, 12.34, 3.44] # wlh
          anchor_ranges: [-100, -100, 1.0, 100, 100, 1.0]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.3
        unmatched_threshold : 0.15
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.02
        nms_iou_threshold: 0.3
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "emergency_vehicle"
        anchor_generator_range: {
          sizes: [2.45, 6.52, 2.39] # wlh
          anchor_ranges: [-100, -100, 1.0, 100, 100, 1.0]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.4
        unmatched_threshold : 0.3
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.02
        nms_iou_threshold: 0.3
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }

      class_settings: {
        class_name: "other_vehicle"
        anchor_generator_range: {
          sizes: [2.79, 8.20, 3.23] # wlh
          anchor_ranges: [-100, -100, 1.0, 100, 100, 1.0]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.4
        unmatched_threshold : 0.3
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.02
        nms_iou_threshold: 0.3
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "motorcycle"
        anchor_generator_range: {
          sizes: [0.96, 2.35, 1.59] # wlh
          anchor_ranges: [-100, -100, 1.0, 100, 100, 1.0]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.2
        unmatched_threshold : 0.15
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.02
        nms_iou_threshold: 0.3
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      class_settings: {
        class_name: "pedestrian"
        anchor_generator_range: {
          sizes: [0.81, 0.77, 1.78] # wlh
          anchor_ranges: [-100, -100, 1.0, 100, 100, 1.0]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.2
        unmatched_threshold : 0.15
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.02
        nms_iou_threshold: 0.3
        region_similarity_calculator: {
          nearest_iou_similarity: {
          }
        }
      }
      class_settings: {
        class_name: "truck"
        anchor_generator_range: {
          sizes: [2.84, 10.24, 3.44] # wlh
          anchor_ranges: [-100, -100, 1.0, 100, 100, 1.0]
          rotations: [0, 1.57] # DON'T modify this unless you are very familiar with my code.
          # custom_values: [0, 0] # velocity vector base value
        }
        matched_threshold : 0.4
        unmatched_threshold : 0.3
        use_rotate_nms: false
        use_multi_class_nms: false
        nms_pre_max_size: 1000
        nms_post_max_size: 300
        nms_score_threshold: 0.02
        nms_iou_threshold: 0.3
        region_similarity_calculator: {
          nearest_iou_similarity: {}
        }
      }
      sample_positive_fraction : -1
      sample_size : 512
      assign_per_class: true
    }
  }
}

train_input_reader: {
  dataset: {
    dataset_class_name: "LyftDataset"
  }

  batch_size: 4
  preprocess: {
    shuffle_points: false
    num_workers: 3
    groundtruth_localization_noise_std: [0, 0, 0]
    groundtruth_rotation_uniform_noise: [0, 0]
    # groundtruth_localization_noise_std: [0.25, 0.25, 0.25]
    # groundtruth_rotation_uniform_noise: [-0.15707963267, 0.15707963267]
    global_rotation_uniform_noise: [0, 0]
    global_scaling_uniform_noise: [0.95, 1.05]
    global_random_rotation_range_per_object: [0, 0]
    global_translate_noise_std: [0.2, 0.2, 0.2]
    anchor_area_threshold: -1
    remove_points_after_sample: true
    groundtruth_points_drop_percentage: 0.0
    groundtruth_drop_max_keep_points: 15
    remove_unknown_examples: false
    sample_importance: 1.0
    random_flip_x: true
    random_flip_y: true
    remove_environment: false
  }
}

train_config: {
  optimizer: {
    adam_optimizer: {
      learning_rate: {
        one_cycle: {
          lr_max: 3e-3
          moms: [0.95, 0.85]
          div_factor: 10.0
          pct_start: 0.4
        }
      }
      weight_decay: 0.01
    }
    fixed_weight_decay: true
    use_moving_average: false
  }
  steps: 890670 # 14065 * 20 (28130 // 2 )
  steps_per_eval: 33445 # 14065 * 2
  save_checkpoints_secs : 1800 # half hour
  save_summary_steps : 10
  enable_mixed_precision: true
  loss_scale_factor: -1
  clear_metrics_every_epoch: true
}

eval_input_reader: {
  dataset: {
    dataset_class_name: "LyftDataset"
  }
  batch_size: 2

  preprocess: {
    max_number_of_voxels: 80000
    shuffle_points: false
    num_workers: 2
    anchor_area_threshold: -1
    remove_environment: false
  }
}
